#!/usr/bin/env ruby
#
# Copyright (c) Niklaus Giger niklaus.giger@member.fsf.org
#
# Simple test script for the elexis-vagrant project to poll a dummy table
# Used to verify that the backup server gets results from the main server
# and updates its copy correctly
# Additionally copies the created dump via rsync/ssh to a remote server

$: << File.dirname( __FILE__)
require 'pg_util.rb'

<%= scope.function_include(['elexis::postgresql_server']) %>
pg_main_db_name      = '<%=  scope.function_hiera(['elexis::pg_main_db_name',     'elexis']) %>'
pg_main_db_user      = '<%=  scope.function_hiera(['elexis::pg_main_db_user',     'elexis']) %>'
pg_main_db_password  = '<%=  scope.function_hiera(['elexis::pg_main_db_password', 'elexisTest']) %>'
pg_tst_db_name       = '<%=  scope.function_hiera(['elexis::pg_tst_db_name',      'tst_db']) %>'
pg_dump_dir          = '<%=  scope.function_hiera(['elexis::pg_dump_dir',         '/home/backup-pg']) %>'
pg_remote_backup     = '<%=  scope.function_hiera(['elexis::pg_remote_backup',    false]) %>'

ENV['PGPASSWORD'] = pg_main_db_password
dump   = "#{pg_dump_dir}/#{pg_main_db_name}.dump.gz"
cmd =   "pg_dump --user #{pg_main_db_user} --host localhost "
cmd +=  "--encoding=UTF-8 --file=#{dump} " 
cmd +=  "--compress=9 --clean " # zip output and insert drop statement
cmd += pg_main_db_name

res = system(cmd)
logAction("dump of #{pg_main_db_name} into #{dump} finished with res #{res}")
exit 2 unless res

if pg_remote_backup
  cmd =   "rsync -av -e ssh #{dump} #{pg_remote_backup}"
  res = system(cmd)
  logAction("pg_remote_backup into #{pg_remote_backup} finished")
  exit 2 unless res
end
