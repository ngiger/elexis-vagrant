# see http://vagrantup.com
# Copyright (c) Niklaus Giger, <niklaus.giger@member.fsf.org>
# License: GPLv2
# Boxes are stored under ~/.vagrant.d/boxes/
require 'vagrant-hiera'

private = '/opt/fileserver/elexis/boxes/Elexis-Wheezy-amd64.box'
private = '/opt/src/veewee/Elexis-Wheezy-amd64.box'
boxUrl = File.exists?(private) ? private : 'http://ngiger.dyndns.org/downloads/Elexis-Wheezy-amd64.box'
puts "Using boxUrl #{boxUrl}"

Vagrant::Config.run do |config|
  # Setup the box
  # Boot with a GUI so you can see the screen. (Default is headless)
  config.vm.boot_mode = :gui
  config.vm.provision :puppet, :options => "--debug"

  config.vm.customize ["modifyvm", :id, "--memory", 3136]    
  config.vm.customize do |vm|
    vm.memory_size  = 2148 # MB
  end
  
  config.vm.provision :puppet do |puppet|
    # This shell provisioner installs librarian-puppet and runs it to install
    # puppet modules. This has to be done before the puppet provisioning so that
    # the modules are available when puppet tries to parse its manifests.
    # config.vm.provision :shell, :path => "shell/main.sh"
    # or inline
    config.vm.provision :shell, :inline => "sudo apt-get update && sudo apt-get install puppet -y"
    
    # Now run the puppet provisioner. Note that the modules directory is entirely
    # managed by librarian-puppet
    puppet.manifests_path = "manifests"
    puppet.manifest_file = "site.pp"
    puppet.module_path = "modules"
  end

  if defined?(config.hiera)
    config.hiera.config_path = '.'
    config.hiera.config_file = 'vagrant_hiera.yaml'
    config.hiera.data_path   = '.'    
  end if false
  
  config.vm.define :server do |thisbox|  
    thisbox.vm.host_name = "server.#{`hostname -d`.chomp}"
    thisbox.vm.network :hostonly, "192.168.50.10"
    thisbox.vm.box     = "Elexis-Wheezy-amd64"
    thisbox.vm.box_url = boxUrl
    thisbox.vm.forward_port   22, 10022    # ssh
    thisbox.vm.forward_port   80, 10080    # Apache
    thisbox.vm.forward_port 3306, 13306    # MySQL
    thisbox.vm.forward_port 4567, 14567    # Gollum (elexis-admin Wiki)
    thisbox.vm.forward_port 8080, 18080    # Jenkins
    thisbox.vm.forward_port 9393, 19393    # elexis-cockpit
  end
  
  config.vm.define :backup do |thisbox|  
    thisbox.vm.host_name = "backup.#{`hostname -d`.chomp}"
    thisbox.vm.network :hostonly, "192.168.50.20"
    thisbox.vm.box     = "Elexis-Wheezy-amd64"
    thisbox.vm.box_url = boxUrl
    thisbox.vm.forward_port   22, 20022    # ssh
    thisbox.vm.forward_port   80, 20080    # Apache
    thisbox.vm.forward_port 3306, 23306    # MySQL
    thisbox.vm.forward_port 4567, 24567    # Gollum (elexis-admin Wiki)
    thisbox.vm.forward_port 9393, 29393    # elexis-cockpit
  end
  
  config.vm.define :devel do |thisbox|
    thisbox.vm.host_name = "devel.#{`hostname -d`.chomp}"
    thisbox.vm.network :hostonly, "192.168.50.40"
    thisbox.vm.box     = "Elexis-Wheezy-amd64"
    thisbox.vm.box_url = boxUrl
    config.vm.boot_mode = :gui # :gui or :headless (default)
    thisbox.vm.forward_port   22, 40022		# ssh
    thisbox.vm.forward_port   80, 40080		# Apache
    thisbox.vm.forward_port 3306, 43306		# MySQL
    thisbox.vm.forward_port 4567, 44567		# Gollum (elexis-admin Wiki)
    thisbox.vm.forward_port 9393, 49393    # elexis-cockpit
  end if false
end
