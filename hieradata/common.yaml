---
# definition of postgresql database
# unfortunately the syntax via puppet is signifcantly different so we need a different variable for mysql!
pg_dbs:
  -
    db_name: elexis
    db_user: elexis
    # specify either db_password or db_pw_hash
    # puppet apply --execute 'notify { "test": message => postgresql_password("elexis", "elexisTest") }' --modulepath /vagrant/modules/  
    db_password: "thisPasswordOverrideBy db_pw_hash"
    db_pw_hash: md5e0925320617bda379cf9db294f07caf2
    # SELECT or UPDATE are not supported, only worked with ALL
    db_privileges: ALL
  -
    db_name: test
    db_user: elexis
    db_pw_hash: md5e0925320617bda379cf9db294f07caf2
    db_privileges: ALL
  -
    db_name: elexis
    db_user: reader
    db_password: elexisTest
    db_privileges: 'ALL'
  -
    db_name: test
    db_user: reader
    db_password: elexisTest
    db_privileges: ALL

mysql_dbs:
  -
    db_name: elexis
    db_user: elexis@%
    # specify either db_password or db_pw_hash
#     # puppet apply --execute 'notify { "test": message => mysql_password("elexisTest") }' --modulepath /vagrant/modules/  
    db_password: "thisPasswordOverrideBy db_pw_hash"
    db_pw_hash: "*0B9FC6091D135BD4050DDBCA19FC9F73D7527C8B"
    # Or specify individual privileges with columns from the mysql.db table:
    # privileges => ['Select_priv', 'Insert_priv', 'Update_priv', 'Delete_priv']

    db_privileges: ALL
  -
    db_name: test
    db_user: elexis@%
    db_pw_hash: "*0B9FC6091D135BD4050DDBCA19FC9F73D7527C8B"
    db_privileges: ALL
  -
    db_name: elexis
    db_user: reader@%
    db_password: elexisTest
    db_privileges: 'Select_priv'
  -
    db_name: test
    db_user: reader@%
    db_password: elexisTest
    db_privileges: Select_priv

editor::default:   /usr/bin/vim.nox
editor::package:   vim-nox
elexis::default_eclipse:      eclipse-rcp-juno-SR2
elexis::jenkinsDir:           /opt/jenkins
elexis::eclipseRelease:       juno
elexis::default_eclipse:      eclipse-rcp-juno-SR2
elexis::downloadURL:          http://ftp.medelexis.ch/downloads_opensource
elexis::apt_prox_host:        172.25.1.233
elexis::apt_prox_port:        3142
elexis::db_type:   pg
elexis::db_server: server
elexis::db_backup: backup
elexis::db_server::backup_server_is: backup
elexis::db_port:   3306
elexis::db_user:   elexis
elexis::db_password:   elexisTest # password of main DB user
# elexis::db_pw_hash:    elexisTest # or better and used if present password hash of main DB user
elexis::db_main:   elexis   # Name of DB to use for production
elexis::db_test:   test     # Name of test DB to use for production
elexis::pg_dump_dir:         /home/postgresql/dumps/
elexis::pg_backup_dir:       /home/postgresql/backups/
elexis::pg_backup_files:     /home/postgresql/dumps/elexis.dump*.gz
elexis::pg_switch_script:     /usr/local/bin/pg_switch.sh

# ensure that you can send mail via an sstmp user
# elexis::mail::user:      'put your username   into hieradata/private/config.yaml'
# elexis::mail::password:  'put your password   into hieradata/private/config.yaml'
# elexis::mail::smtp_host: 'put your smtp_host  into hieradata/private/config.yaml'

elexis::bin_dir:  /usr/local/bin
elexis::java:     'openjdk-6-jdk'
elexis::service_path: /var/lib/service
# This script must be normal bash scripts or we will have problem
elexis::install_script: 
server::reboot_script: '/usr/bin/sudo /sbin/shutdown -r -t 30 now'
server::halt_script:   '/usr/bin/sudo /sbin/shutdown -h -t 30 now'

# some parameters for PostgreSQL users. We assume that we want it
elexis::ensure: true
# next lines must be in sync with dbs
elexis::pg_main_db_name:     elexis
elexis::pg_tst_db_name:      test
elexis::pg_main_db_user:     elexis
elexis::pg_main_db_password: elexisTest

# Allows you to set parameters in pg_hba.conf    
pg::config_hash:
  ip_mask_deny_postgres_user: '0.0.0.0/32'
  ip_mask_allow_all_users:    '10.0.2.0/24'
  listen_addresses:           '*'
  manage_redhat_firewall:     false
  postgres_password:          postgres

# next line(s) go into /etc/postgresql/9.1/main/postgresql_puppet_extras.conf
pg::puppet_extras: "archive_command = '/usr/bin/test ! -f /home/backup-pg/wal/%f && /bin/cp %p /home/backup-pg/wal/%f < /dev/null'\n
archive_timeout = 20s\n
autovacuum =      on
"

# some parameters for MySQL users. We assume that we want 
mysql::server:root_password: elexisTest
elexis::ensure: true
elexis::mysql_main_db_name:     elexis
elexis::mysql_tst_db_name:      test
elexis::mysql_main_db_user:     elexis
elexis::mysql_main_db_password: elexisTest
elexis::mysql_dump_dir:         /home/mysql/dumps/
elexis::mysql_backup_dir:       /home/mysql/backups/
elexis::mysql_backup::files:    /home/mysql/dumps/elexis.dump*.gz

# Install Elexis and/or Medelexis current versions
elexis::install::OpenSource::ensure:     true
elexis::install::OpenSource::programURL: http://ftp.medelexis.ch/downloads_opensource/elexis/2.1.7.rc2/elexis-2.1.7.20121007-installer.jar
elexis::install::OpenSource::version:    2.1.7.rc2

elexis::install::Medelexis::ensure:      true
elexis::install::Medelexis::programURL:  http://www.medelexis.ch/dl21.php?file=medelexis-linux
elexis::install::Medelexis::version:     2.1.7.0

# What you prefer for your client
X::display_manager: slim
X::window_manager:  awesome

elexis::cockit::vcsRoot: /opt/src/elexis-cockpit

users:
  - 
    id: arzt
    name: "Dr. Max MÃ¼ller"
    mandant:  true
  - 
    id: mpa
    name: "Maria Bernasconi"
  
  